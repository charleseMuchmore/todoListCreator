(()=>{"use strict";var e,t={313:(e,t,n)=>{function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==r(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}n(138);var i=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.resourcesCount=0,this.assignmentCount=0,this.$form=document.getElementById("downloadForm"),this.$resourceButton=document.getElementById("resourceButton"),this.$assignmentButton=document.getElementById("assignmentButton"),this.hRule="_________________________________________________________\n",this.headingDashes=" ----- ",this.download=this.download.bind(this),this.$form.addEventListener("submit",this.download),this.addLine=this.addLine.bind(this),this.$resourceButton.addEventListener("click",this.addLine),this.$assignmentButton.addEventListener("click",this.addLine)}var t,n;return t=e,(n=[{key:"getResourcesData",value:function(){for(var e="",t=1;t<=this.resourcesCount;t++)e+="-"+document.getElementById("resource"+t).value,e+="\n";return e}},{key:"getassignmentsData",value:function(){for(var e="",t=1;t<=this.assignmentCount;t++){var n=document.getElementById("assignment"+t),r=document.getElementById("assignmentDatetimePicker"+t);e+="-"+new Date(r.value).toLocaleDateString("en-us",{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric"})+": "+n.value,e+="\n"}return e}},{key:"download",value:function(e){e.preventDefault();var t=document.getElementById("downloadForm"),n=new FormData(t),r=this.getResourcesData(),o=this.getassignmentsData(),i=n.get("filename")+".txt",s=(n.get("content"),n.get("classlist"));if(""===s)return alert("You need to select a class!"),!1;var a=this.hRule+s+"\n"+this.hRule+this.headingDashes+"Resources"+this.headingDashes+"\n"+r+"\n"+this.headingDashes+"Assignments"+this.headingDashes+"\n"+o+this.hRule,u=document.createElement("a");u.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(a)),u.setAttribute("download",i),u.style.display="none",document.body.appendChild(u),u.click(),document.body.removeChild(u)}},{key:"addLine",value:function(e){var t=e.target.id;if("resourceButton"===t){this.resourcesCount++;var n=document.createElement("textarea");return n.setAttribute("id","resource"+this.resourcesCount),void document.getElementById("resource-section").appendChild(n)}if("assignmentButton"===t){this.assignmentCount++;var r=document.createElement("textarea");r.setAttribute("id","assignment"+this.assignmentCount);var o=document.createElement("input");o.setAttribute("type","datetime-local"),o.setAttribute("id","assignmentDatetimePicker"+this.assignmentCount);var i=document.getElementById("assignment-section");return i.appendChild(r),void i.appendChild(o)}}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();window.onload=function(){new i}}},n={};function r(e){var o=n[e];if(void 0!==o)return o.exports;var i=n[e]={exports:{}};return t[e](i,i.exports,r),i.exports}r.m=t,e=[],r.O=(t,n,o,i)=>{if(!n){var s=1/0;for(l=0;l<e.length;l++){for(var[n,o,i]=e[l],a=!0,u=0;u<n.length;u++)(!1&i||s>=i)&&Object.keys(r.O).every((e=>r.O[e](n[u])))?n.splice(u--,1):(a=!1,i<s&&(s=i));if(a){e.splice(l--,1);var d=o();void 0!==d&&(t=d)}}return t}i=i||0;for(var l=e.length;l>0&&e[l-1][2]>i;l--)e[l]=e[l-1];e[l]=[n,o,i]},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={826:0};r.O.j=t=>0===e[t];var t=(t,n)=>{var o,i,[s,a,u]=n,d=0;if(s.some((t=>0!==e[t]))){for(o in a)r.o(a,o)&&(r.m[o]=a[o]);if(u)var l=u(r)}for(t&&t(n);d<s.length;d++)i=s[d],r.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return r.O(l)},n=self.webpackChunktodolistcreator=self.webpackChunktodolistcreator||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var o=r.O(void 0,[994],(()=>r(313)));o=r.O(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,